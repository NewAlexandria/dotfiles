# good things: https://gist.github.com/spicycode/1229612
# vim configs: https://gist.github.com/mislav/5189704
# https://github.com/lqueryvg/dotfiles/blob/master/.tmux.conf

# Use Ctrl-w as in GNU Screen
unbind C-b
set -g prefix C-x
set-option -g prefix F9

# Reload key
bind r source-file ~/.tmux.conf

set -g default-terminal "screen-256color"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Copying {{{
# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set -g @yank_selection 'primary' # or 'secondary' or 'clipboard'
set -g @shell_mode 'vi'
# }}}

# Selection {{{
# --------------

set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

set -g mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

#bind -t vi-copy v begin-selection      " this breaks block selection!!
#bind -t vi-copy y copy-selection
#bind -t vi-copy y copy-selection \; run-shell cp_tmux_sel.sh
#bind -t vi-copy y run-shell cp_tmux_sel.sh
#bind y run-shell "~/dotfiles/bin/cp_tmux_sel.sh"
#bind-key -T copy-mode-vi Escape send-keys -X cancel

#bind-key -T copy-mode-vi MouseDragEnd1Pane    \
  #send-keys -X copy-selection              \; \
  #run-shell cp_tmux_sel.sh

#bind-key -T copy-mode-vi y       \
  #send-keys -X copy-selection \; \
  #run-shell cp_tmux_sel.sh    \; \
  #send-keys -X cancel

##bind-key -T copy-mode-vi MouseUp1Pane       \
  ##send-keys -X cancel

## if double click on word, go into copy mode and select it
#bind -T root DoubleClick1Pane    \
  #select-pane                 \; \
  #copy-mode                   \; \
  #send-keys -X select-word

## if middle click while in copy mode, paste selection (if any)
#bind-key -T copy-mode-vi MouseDown2Pane    \
  #send-keys -X copy-selection-and-cancel   \; \
  #run-shell cp_tmux_sel.sh                 \; \
  #paste-buffer
##  display-message "hello"

##bind-key -T copy-mode-vi MouseDown2Pane display-message "hello"
##unbind-key -T copy-mode-vi MouseDown2Pane
##bind-key -T copy-mode-vi MouseDown3Pane display-message "hello"

#set-option -g word-separators ' ,'

## BODGE: This should work by default (problem gone away?)
##bind-key -t vi-copy      j cursor-down

#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# }}}

# Theme {{{

set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami) '
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

